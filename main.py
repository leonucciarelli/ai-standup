import streamlit as st
import json
import langchain_helper as lch

st.set_page_config(page_title="AI Stand‑Up", page_icon="🎤", layout="centered")
st.title("🎤 I'll tell you a joke!")

with st.sidebar:
    request = st.text_area("Ask for a joke:", max_chars=200)
    show_debug = st.checkbox("Show debug", value=False)

if request:
    with st.spinner("Mmm, I am thinking about it..."):
        try:
            response = lch.tell_joke(request)
        except Exception as e:
            st.error(f"Something went wrong: {e}")
            st.stop()

    joke = response.get("joke", "")
    info = response.get("info", {})

    st.subheader("🎭 The Joke")
    st.info("⚠️ This joke was generated by an AI model.")
    st.markdown(f"**{joke}**")

    st.subheader("🤖 AI Comedy Style Matcher")
    st.caption("This is an AI guess, not definitive.")

    comedian = info.get("predicted_comedian", "unknown")
    confidence = info.get("confidence", 0.0)

    col1, col2 = st.columns([2, 1])
    with col1:
        st.subheader(comedian)
    with col2:
        st.metric("Confidence", f"{round(confidence * 100, 1)} %")

    if info.get("rationale"):
        st.subheader("💡 Why this match?")
        for bullet in info["rationale"]:
            st.markdown(f"- {bullet}")

    if info.get("bio"):
        with st.expander("📖 Biography"):
            st.write(info["bio"])

    if info.get("sources"):
        st.subheader("🔗 Sources")
        for url in info["sources"]:
            st.markdown(f"- [Wikipedia]({url})")

    if show_debug:
        st.divider()
        st.caption("Debug payload")
        st.code(json.dumps(response, indent=2))
